% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scale_min_max.R
\name{step_scale_min_max}
\alias{step_scale_min_max}
\alias{tidy.step_scale_min_max}
\title{Scaling Numeric Data}
\usage{
step_scale_min_max(recipe, ..., role = NA, skip = FALSE,
  trained = FALSE, columns = NULL)

tidy.step_scale_min_max(x, ...)
}
\arguments{
\item{...}{One or more selector functions to choose which
variables are affected by the step. See [selections()]
for more details. For the \code{tidy} method, these are not
currently used.}

\item{role}{Not used by this step since no new variables are
created.}

\item{x}{A `step_scale_min_max` object.}
}
\value{
An updated version of \code{recipe} with the new step
 added to the sequence of existing steps (if any). For the
 \code{tidy} method, a tibble with columns \code{terms} (the
 selectors or variables selected) and \code{value} (the
 standard deviations).
}
\description{
\code{step_scale_min_max} creates a \emph{specification} of a recipe
 step that will normalize numeric data between 0 and 1.
}
\details{
Scaling based on min and max is defined as: \deqn{(x - min(x)) / (max(x) - min(x))}
 The calculation is performed in \code{bake.recipe}.
}
\examples{
library(recipes)
data(mtcars)

rec <- recipe(mtcars)

scaled_data <- rec \%>\%
  step_scale_min_max(all_numeric())

scaled_obj <- prep(scaled_data, retain = TRUE)

transformed_obj <- juice(scaled_obj)
transformed_obj

}
\concept{preprocessing normalization_methods}
\keyword{datagen}
